{"version":3,"sources":["context/ColorContext.js","reducers/PostReducer.js","context/PostContext.js","App.js","reportWebVitals.js","index.js"],"names":["ColorContext","createContext","ColorContextProvider","children","useState","color","setColor","Provider","value","changeColor","c","initialState","id","title","addReducer","state","action","type","input","Math","random","filter","post","PostContext","PostContextProvider","useReducer","postReducer","posts","dispatch","App","setInput","useContext","font","className","style","height","backgroundColor","onClick","map","onSubmit","e","preventDefault","placeholder","onChange","target","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEaA,EAAeC,0BAgBbC,EAdc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnBC,mBAAS,IADU,mBACtCC,EADsC,KAC/BC,EAD+B,KAO7C,OACE,cAACN,EAAaO,SAAd,CAAuBC,MAAO,CAAEH,QAAOI,YALrB,SAACC,GACnBJ,GAAUI,KAIV,SACGP,K,OCbMQ,EACJ,CACL,CAAEC,GAAI,EAAGC,MAAO,cAChB,CAAED,GAAI,EAAGC,MAAO,cAChB,CAAED,GAAI,EAAGC,MAAO,oBAIPC,EAAa,SAACC,EAAOC,GAChC,OAAQA,EAAOC,MACb,IAAK,WACH,MAAM,GAAN,mBACKF,GADL,CAEE,CACEF,MAAOG,EAAOE,MACdN,GAAoB,IAAhBO,KAAKC,YAGf,IAAK,cACH,OAAOL,EAAMM,QAAO,SAACC,GAAD,OAAUA,EAAKV,KAAOI,EAAOJ,MACnD,QACE,OAAOG,IClBAQ,EAActB,0BAeZuB,EAba,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,EAClBsB,qBACxBC,EACAA,GAH0C,mBACrCC,EADqC,KAC9BC,EAD8B,KAM5C,OACE,cAACL,EAAYhB,SAAb,CAAsBC,MAAO,CAAEmB,QAAOC,YAAtC,SACGzB,KC8CQ0B,MAvDf,WAAgB,IAAD,EACazB,mBAAS,IADtB,mBACNc,EADM,KACCY,EADD,OAGkBC,qBAAW/B,GAAlCK,EAHK,EAGLA,MAAOI,EAHF,EAGEA,YAHF,EAIesB,qBAAWR,GAA/BI,EAJK,EAILA,MAAOC,EAJF,EAIEA,SACTI,EAAO3B,EAAQ,MAAQ,QAY7B,OACE,sBACE4B,UAAU,YACVC,MAAO,CAAEC,OAAQ,OAAQC,gBAAiBJ,GAF5C,UAIE,oBAAIK,QAAS,kBAAM5B,EAAYJ,IAAQ6B,MAAO,CAAE7B,MAAO,QAAvD,SACG2B,IAEH,uBACA,6BACGL,EAAMW,KAAI,SAAChB,GAAD,OACT,+BACGA,EAAKT,MADR,KACiB,IACf,wBACEwB,QAAS,kBAlBCzB,EAkBkBU,EAAKV,QAjB3CgB,EAAS,CAAEX,KAAM,cAAeL,OADb,IAACA,GAmBVqB,UAAU,wBAFZ,eAKU,MAPHX,EAAKV,SAWlB,uBAEA,sBAAM2B,SAlCQ,SAACC,GACjBA,EAAEC,iBACFb,EAAS,CAAEX,KAAM,WAAYC,UAC7BY,EAAS,KA+BP,SACE,uBACEb,KAAK,OACLyB,YAAY,MACZlC,MAAOU,EACPyB,SAAU,SAACH,GAAD,OAAOV,EAASU,EAAEI,OAAOpC,QACnCyB,UAAU,eACVC,MAAO,CAAEW,MAAO,eCxCXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCGdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1bb0e1a.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\r\n\r\nexport const ColorContext = createContext();\r\n\r\nconst ColorContextProvider = ({ children }) => {\r\n  const [color, setColor] = useState('');\r\n\r\n  const changeColor = (c) => {\r\n    setColor(!c);\r\n  };\r\n\r\n  return (\r\n    <ColorContext.Provider value={{ color, changeColor }}>\r\n      {children}\r\n    </ColorContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ColorContextProvider;\r\n","export const initialState = {\r\n  posts: [\r\n    { id: 1, title: 'Adam Smith' },\r\n    { id: 2, title: 'Dan Robert' },\r\n    { id: 3, title: 'Geroge Alderson' },\r\n  ],\r\n};\r\n\r\nexport const addReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_POST':\r\n      return [\r\n        ...state,\r\n        {\r\n          title: action.input,\r\n          id: Math.random() * 100,\r\n        },\r\n      ];\r\n    case 'REMOVE_POST':\r\n      return state.filter((post) => post.id !== action.id);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { useReducer, createContext } from 'react';\r\nimport * as postReducer from '../reducers/PostReducer';\r\n\r\nexport const PostContext = createContext();\r\n\r\nconst PostContextProvider = ({ children }) => {\r\n  const [posts, dispatch] = useReducer(\r\n    postReducer.addReducer,\r\n    postReducer.initialState.posts\r\n  );\r\n\r\n  return (\r\n    <PostContext.Provider value={{ posts, dispatch }}>\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PostContextProvider;\r\n","import { useState, useContext } from 'react';\nimport { ColorContext } from './context/ColorContext';\nimport { PostContext } from './context/PostContext';\n\nfunction App() {\n  const [input, setInput] = useState('');\n\n  const { color, changeColor } = useContext(ColorContext);\n  const { posts, dispatch } = useContext(PostContext);\n  const font = color ? 'red' : 'green';\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    dispatch({ type: 'ADD_POST', input });\n    setInput('');\n  };\n\n  const handleDelete = (id) => {\n    dispatch({ type: 'REMOVE_POST', id });\n  };\n\n  return (\n    <div\n      className='container'\n      style={{ height: '60vh', backgroundColor: font }}\n    >\n      <h3 onClick={() => changeColor(color)} style={{ color: '#fff' }}>\n        {font}\n      </h3>\n      <hr />\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>\n            {post.title} |{' '}\n            <button\n              onClick={() => handleDelete(post.id)}\n              className='btn btn-sm btn-danger'\n            >\n              X\n            </button>{' '}\n          </li>\n        ))}\n      </ul>\n      <hr />\n\n      <form onSubmit={handleAdd}>\n        <input\n          type='text'\n          placeholder='add'\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          className='form-control'\n          style={{ width: '50%' }}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ColorContextProvider from './context/ColorContext';\nimport PostContextProvider from './context/PostContext';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorContextProvider>\n      <PostContextProvider>\n        <App />\n      </PostContextProvider>\n    </ColorContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}